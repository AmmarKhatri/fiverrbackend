
syntax = "proto3";
package schedule;
option go_package = "/schedule";
import "google/protobuf/empty.proto";
import "schedule/lesserknown/date.proto";
import "schedule/lesserknown/color.proto";

message Label {
    int64 id = 1;
    string label_text = 2;
    google.type.Color label_color = 3; 
}

message LabelInput {
    int64 id = 1;
    string label_text = 2;
    google.type.Color label_color = 3; 
}

message Recipient {
    int64 id = 1;
    int64 caretaker_id = 2;
    string name = 3;
    int64 recipient_type_id = 4;
}

// An appointment resource
message Appointment {
    int64 id = 1;
    int64 provider_id = 2;
    int64 customer_id = 3;
    int64 service_id = 4;
    string start_datetime = 5;
    string end_datetime = 6;
    repeated Recipient recipients = 7;
}

message ServiceSummary {
    string icon = 1;
    int64 total_appointments_for_service = 2;
    int64 service_id = 3;
}

message DaySummary {
    int64 provider_id = 1;
    google.type.Date calendar_date = 2;
    repeated ServiceSummary count_by_service_type = 3;    
}

message CustomerDay {
    int64 provider_id = 1;
    google.type.Date calendar_date = 2;
    bool is_available = 3;
    optional int64 appointment_id = 4;
}

message ProviderDay {
    int64 provider_id = 1;
    google.type.Date calendar_date = 2;
    bool is_available = 3;
    repeated Label labels = 4;
    DaySummary day_summary = 5;    
}

message ProviderDayInput {
    int64 provider_id = 1;
    google.type.Date calendar_date = 2;
    bool is_available = 3;
    repeated LabelInput labels = 4;
}

message DayDetails {
    google.type.Date calendar_date = 1;
    repeated Appointment appointments = 2;
}

// A ListDaysRequest
message ListDaysRequest {
    int64 provider_id = 1;
    google.type.Date start_date = 2;
    int32 length = 3;
}

message ListProviderDaysResponse {
    repeated ProviderDay days = 1;
}

message ListCustomerDaysResponse {
    repeated CustomerDay days = 1;
}

message UpdateCalendarRequest {
    repeated ProviderDayInput days = 2;
}

message UpdateCalendarResponse {
    repeated ProviderDay days = 1;
}

message AddAppointmentRequest {
    optional int64 appointment_id = 1;
    int64 provider_id = 2;
    int64 customer_id = 3;
    int64 service_id = 4;
    string start_datetime = 5;
    string end_datetime = 6;
    repeated int64 recipient_ids = 7;
}

message CancelAppointmentRequest {
    int64 appointment_id = 1;
    string datetime_of_cancellation = 2;
}

message GetDayDetailsRequest {
    google.type.Date calendar_date = 1;
}

service Scheduler {
    rpc ListProviderDays(ListDaysRequest) returns (ListProviderDaysResponse);
    rpc ListCustomerDays(ListDaysRequest) returns(ListCustomerDaysResponse);
    rpc UpdateCalendar(UpdateCalendarRequest) returns (UpdateCalendarResponse);
    rpc AddAppointment(AddAppointmentRequest) returns (Appointment);
    rpc CancelAppointment(CancelAppointmentRequest) returns (google.protobuf.Empty);
    rpc GetDayDetails(GetDayDetailsRequest) returns (DayDetails);
}

// usage:
//   rules: # IMPORTANT: ONLY LAST MATCHING RULE IS APPLIED
//   # Disable API key validation on just the ListShelves method
//   # while requiring an API key for the rest of the API.
//   - selector: "*"
//     allow_unregistered_calls: false
//   - selector: "endpoints.scheduler.Scheduler.ListCustomerDays"
//     allow_unregistered_calls: true
