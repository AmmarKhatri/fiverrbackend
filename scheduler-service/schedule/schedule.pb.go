// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: schedule/schedule.proto

package schedule

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A Label resource
type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique label id
	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LabelText  string `protobuf:"bytes,2,opt,name=label_text,json=labelText,proto3" json:"label_text,omitempty"`
	LabelColor string `protobuf:"bytes,3,opt,name=label_color,json=labelColor,proto3" json:"label_color,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *Label) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Label) GetLabelText() string {
	if x != nil {
		return x.LabelText
	}
	return ""
}

func (x *Label) GetLabelColor() string {
	if x != nil {
		return x.LabelColor
	}
	return ""
}

type LabelInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LabelText  string `protobuf:"bytes,2,opt,name=label_text,json=labelText,proto3" json:"label_text,omitempty"`
	LabelColor string `protobuf:"bytes,3,opt,name=label_color,json=labelColor,proto3" json:"label_color,omitempty"`
}

func (x *LabelInput) Reset() {
	*x = LabelInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelInput) ProtoMessage() {}

func (x *LabelInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelInput.ProtoReflect.Descriptor instead.
func (*LabelInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *LabelInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LabelInput) GetLabelText() string {
	if x != nil {
		return x.LabelText
	}
	return ""
}

func (x *LabelInput) GetLabelColor() string {
	if x != nil {
		return x.LabelColor
	}
	return ""
}

type RecipientType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RecipientType) Reset() {
	*x = RecipientType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipientType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientType) ProtoMessage() {}

func (x *RecipientType) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientType.ProtoReflect.Descriptor instead.
func (*RecipientType) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *RecipientType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecipientType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RecipientAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientTypeId int64  `protobuf:"varint,1,opt,name=recipient_type_id,json=recipientTypeId,proto3" json:"recipient_type_id,omitempty"`
	AttributeName   string `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	AttributeValue  string `protobuf:"bytes,3,opt,name=attribute_value,json=attributeValue,proto3" json:"attribute_value,omitempty"`
}

func (x *RecipientAttributes) Reset() {
	*x = RecipientAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipientAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientAttributes) ProtoMessage() {}

func (x *RecipientAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientAttributes.ProtoReflect.Descriptor instead.
func (*RecipientAttributes) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *RecipientAttributes) GetRecipientTypeId() int64 {
	if x != nil {
		return x.RecipientTypeId
	}
	return 0
}

func (x *RecipientAttributes) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *RecipientAttributes) GetAttributeValue() string {
	if x != nil {
		return x.AttributeValue
	}
	return ""
}

type RecipientAttributesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientTypeId int64  `protobuf:"varint,1,opt,name=recipient_type_id,json=recipientTypeId,proto3" json:"recipient_type_id,omitempty"`
	AttributeName   string `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	AttributeValue  string `protobuf:"bytes,3,opt,name=attribute_value,json=attributeValue,proto3" json:"attribute_value,omitempty"`
}

func (x *RecipientAttributesInput) Reset() {
	*x = RecipientAttributesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipientAttributesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientAttributesInput) ProtoMessage() {}

func (x *RecipientAttributesInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientAttributesInput.ProtoReflect.Descriptor instead.
func (*RecipientAttributesInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *RecipientAttributesInput) GetRecipientTypeId() int64 {
	if x != nil {
		return x.RecipientTypeId
	}
	return 0
}

func (x *RecipientAttributesInput) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *RecipientAttributesInput) GetAttributeValue() string {
	if x != nil {
		return x.AttributeValue
	}
	return ""
}

type Recipient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RecipientId   int64                  `protobuf:"varint,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	RecipientType int64                  `protobuf:"varint,4,opt,name=recipient_type,json=recipientType,proto3" json:"recipient_type,omitempty"`
	Attributes    []*RecipientAttributes `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Recipient) Reset() {
	*x = Recipient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipient) ProtoMessage() {}

func (x *Recipient) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipient.ProtoReflect.Descriptor instead.
func (*Recipient) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{5}
}

func (x *Recipient) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Recipient) GetRecipientId() int64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *Recipient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipient) GetRecipientType() int64 {
	if x != nil {
		return x.RecipientType
	}
	return 0
}

func (x *Recipient) GetAttributes() []*RecipientAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type RecipientInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RecipientId   int64                       `protobuf:"varint,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Name          string                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	RecipientType int64                       `protobuf:"varint,4,opt,name=recipient_type,json=recipientType,proto3" json:"recipient_type,omitempty"`
	Attributes    []*RecipientAttributesInput `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *RecipientInput) Reset() {
	*x = RecipientInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipientInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientInput) ProtoMessage() {}

func (x *RecipientInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientInput.ProtoReflect.Descriptor instead.
func (*RecipientInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{6}
}

func (x *RecipientInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecipientInput) GetRecipientId() int64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *RecipientInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecipientInput) GetRecipientType() int64 {
	if x != nil {
		return x.RecipientType
	}
	return 0
}

func (x *RecipientInput) GetAttributes() []*RecipientAttributesInput {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ServiceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label           string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BasePrice       int64  `protobuf:"varint,4,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	DefaultDuration int64  `protobuf:"varint,5,opt,name=default_duration,json=defaultDuration,proto3" json:"default_duration,omitempty"`
}

func (x *ServiceType) Reset() {
	*x = ServiceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceType) ProtoMessage() {}

func (x *ServiceType) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceType.ProtoReflect.Descriptor instead.
func (*ServiceType) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{7}
}

func (x *ServiceType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceType) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ServiceType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceType) GetBasePrice() int64 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

func (x *ServiceType) GetDefaultDuration() int64 {
	if x != nil {
		return x.DefaultDuration
	}
	return 0
}

type ServiceTypeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label           string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BasePrice       int64  `protobuf:"varint,4,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	DefaultDuration int64  `protobuf:"varint,5,opt,name=default_duration,json=defaultDuration,proto3" json:"default_duration,omitempty"`
}

func (x *ServiceTypeInput) Reset() {
	*x = ServiceTypeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTypeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTypeInput) ProtoMessage() {}

func (x *ServiceTypeInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTypeInput.ProtoReflect.Descriptor instead.
func (*ServiceTypeInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{8}
}

func (x *ServiceTypeInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceTypeInput) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ServiceTypeInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceTypeInput) GetBasePrice() int64 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

func (x *ServiceTypeInput) GetDefaultDuration() int64 {
	if x != nil {
		return x.DefaultDuration
	}
	return 0
}

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone      string       `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string       `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Recipients []*Recipient `protobuf:"bytes,5,rep,name=recipients,proto3" json:"recipients,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{9}
}

func (x *Customer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Customer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Customer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Customer) GetRecipients() []*Recipient {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type CustomerInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone      string            `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string            `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Recipients []*RecipientInput `protobuf:"bytes,5,rep,name=recipients,proto3" json:"recipients,omitempty"`
}

func (x *CustomerInput) Reset() {
	*x = CustomerInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerInput) ProtoMessage() {}

func (x *CustomerInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerInput.ProtoReflect.Descriptor instead.
func (*CustomerInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{10}
}

func (x *CustomerInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomerInput) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CustomerInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CustomerInput) GetRecipients() []*RecipientInput {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type CustomerPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Customer      *Customer    `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	ServiceType   *ServiceType `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	CustomerPrice float64      `protobuf:"fixed64,5,opt,name=customer_price,json=customerPrice,proto3" json:"customer_price,omitempty"`
}

func (x *CustomerPrice) Reset() {
	*x = CustomerPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerPrice) ProtoMessage() {}

func (x *CustomerPrice) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerPrice.ProtoReflect.Descriptor instead.
func (*CustomerPrice) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{11}
}

func (x *CustomerPrice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerPrice) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *CustomerPrice) GetServiceType() *ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return nil
}

func (x *CustomerPrice) GetCustomerPrice() float64 {
	if x != nil {
		return x.CustomerPrice
	}
	return 0
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone              string         `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email              string         `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	HasVisibleCalendar bool           `protobuf:"varint,5,opt,name=has_visible_calendar,json=hasVisibleCalendar,proto3" json:"has_visible_calendar,omitempty"`
	ServiceTypes       []*ServiceType `protobuf:"bytes,6,rep,name=service_types,json=serviceTypes,proto3" json:"service_types,omitempty"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{12}
}

func (x *Provider) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Provider) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Provider) GetHasVisibleCalendar() bool {
	if x != nil {
		return x.HasVisibleCalendar
	}
	return false
}

func (x *Provider) GetServiceTypes() []*ServiceType {
	if x != nil {
		return x.ServiceTypes
	}
	return nil
}

type ProviderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone              string              `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email              string              `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	HasVisibleCalendar bool                `protobuf:"varint,5,opt,name=has_visible_calendar,json=hasVisibleCalendar,proto3" json:"has_visible_calendar,omitempty"`
	ServiceTypes       []*ServiceTypeInput `protobuf:"bytes,6,rep,name=service_types,json=serviceTypes,proto3" json:"service_types,omitempty"`
}

func (x *ProviderInput) Reset() {
	*x = ProviderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderInput) ProtoMessage() {}

func (x *ProviderInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderInput.ProtoReflect.Descriptor instead.
func (*ProviderInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{13}
}

func (x *ProviderInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProviderInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProviderInput) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ProviderInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ProviderInput) GetHasVisibleCalendar() bool {
	if x != nil {
		return x.HasVisibleCalendar
	}
	return false
}

func (x *ProviderInput) GetServiceTypes() []*ServiceTypeInput {
	if x != nil {
		return x.ServiceTypes
	}
	return nil
}

// An appointment resource
type Appointment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentId int64        `protobuf:"varint,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	Provider      *Provider    `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Customer      *Customer    `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	ServiceType   *ServiceType `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	StartDate     int64        `protobuf:"varint,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	Duration      int64        `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Days          []*Day       `protobuf:"bytes,7,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *Appointment) Reset() {
	*x = Appointment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Appointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appointment) ProtoMessage() {}

func (x *Appointment) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appointment.ProtoReflect.Descriptor instead.
func (*Appointment) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{14}
}

func (x *Appointment) GetAppointmentId() int64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *Appointment) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *Appointment) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *Appointment) GetServiceType() *ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return nil
}

func (x *Appointment) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *Appointment) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Appointment) GetDays() []*Day {
	if x != nil {
		return x.Days
	}
	return nil
}

type AppointmentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentId int64             `protobuf:"varint,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	Provider      *ProviderInput    `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Customer      *CustomerInput    `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	ServiceType   *ServiceTypeInput `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	StartDate     int64             `protobuf:"varint,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	Duration      int64             `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Days          []*DayInput       `protobuf:"bytes,7,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *AppointmentInput) Reset() {
	*x = AppointmentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentInput) ProtoMessage() {}

func (x *AppointmentInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentInput.ProtoReflect.Descriptor instead.
func (*AppointmentInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{15}
}

func (x *AppointmentInput) GetAppointmentId() int64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *AppointmentInput) GetProvider() *ProviderInput {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *AppointmentInput) GetCustomer() *CustomerInput {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *AppointmentInput) GetServiceType() *ServiceTypeInput {
	if x != nil {
		return x.ServiceType
	}
	return nil
}

func (x *AppointmentInput) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *AppointmentInput) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AppointmentInput) GetDays() []*DayInput {
	if x != nil {
		return x.Days
	}
	return nil
}

type AppointmentTypeSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon                     string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	TotalAppointmentsPerType int64  `protobuf:"varint,2,opt,name=total_appointments_per_type,json=totalAppointmentsPerType,proto3" json:"total_appointments_per_type,omitempty"`
}

func (x *AppointmentTypeSummary) Reset() {
	*x = AppointmentTypeSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentTypeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentTypeSummary) ProtoMessage() {}

func (x *AppointmentTypeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentTypeSummary.ProtoReflect.Descriptor instead.
func (*AppointmentTypeSummary) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{16}
}

func (x *AppointmentTypeSummary) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppointmentTypeSummary) GetTotalAppointmentsPerType() int64 {
	if x != nil {
		return x.TotalAppointmentsPerType
	}
	return 0
}

type AppointmentTypeSummaryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon                     string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	TotalAppointmentsPerType int64  `protobuf:"varint,2,opt,name=total_appointments_per_type,json=totalAppointmentsPerType,proto3" json:"total_appointments_per_type,omitempty"`
}

func (x *AppointmentTypeSummaryInput) Reset() {
	*x = AppointmentTypeSummaryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentTypeSummaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentTypeSummaryInput) ProtoMessage() {}

func (x *AppointmentTypeSummaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentTypeSummaryInput.ProtoReflect.Descriptor instead.
func (*AppointmentTypeSummaryInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{17}
}

func (x *AppointmentTypeSummaryInput) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppointmentTypeSummaryInput) GetTotalAppointmentsPerType() int64 {
	if x != nil {
		return x.TotalAppointmentsPerType
	}
	return 0
}

type DaySummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider             *Provider                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Day                  int64                     `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
	AppointmentSummaries []*AppointmentTypeSummary `protobuf:"bytes,3,rep,name=appointment_summaries,json=appointmentSummaries,proto3" json:"appointment_summaries,omitempty"`
}

func (x *DaySummary) Reset() {
	*x = DaySummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaySummary) ProtoMessage() {}

func (x *DaySummary) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaySummary.ProtoReflect.Descriptor instead.
func (*DaySummary) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{18}
}

func (x *DaySummary) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *DaySummary) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *DaySummary) GetAppointmentSummaries() []*AppointmentTypeSummary {
	if x != nil {
		return x.AppointmentSummaries
	}
	return nil
}

type DaySummaryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider             *ProviderInput                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Day                  int64                          `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
	AppointmentSummaries []*AppointmentTypeSummaryInput `protobuf:"bytes,3,rep,name=appointment_summaries,json=appointmentSummaries,proto3" json:"appointment_summaries,omitempty"`
}

func (x *DaySummaryInput) Reset() {
	*x = DaySummaryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaySummaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaySummaryInput) ProtoMessage() {}

func (x *DaySummaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaySummaryInput.ProtoReflect.Descriptor instead.
func (*DaySummaryInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{19}
}

func (x *DaySummaryInput) GetProvider() *ProviderInput {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *DaySummaryInput) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *DaySummaryInput) GetAppointmentSummaries() []*AppointmentTypeSummaryInput {
	if x != nil {
		return x.AppointmentSummaries
	}
	return nil
}

// A day resource
type Day struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider     *Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	CalendarDate int64     `protobuf:"varint,2,opt,name=calendar_date,json=calendarDate,proto3" json:"calendar_date,omitempty"`
	IsAvailable  bool      `protobuf:"varint,3,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	Labels       []*Label  `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *Day) Reset() {
	*x = Day{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Day) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Day) ProtoMessage() {}

func (x *Day) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Day.ProtoReflect.Descriptor instead.
func (*Day) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{20}
}

func (x *Day) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *Day) GetCalendarDate() int64 {
	if x != nil {
		return x.CalendarDate
	}
	return 0
}

func (x *Day) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *Day) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type DayInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider     *ProviderInput `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	CalendarDate int64          `protobuf:"varint,2,opt,name=calendar_date,json=calendarDate,proto3" json:"calendar_date,omitempty"`
	IsAvailable  bool           `protobuf:"varint,3,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	Labels       []*LabelInput  `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *DayInput) Reset() {
	*x = DayInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayInput) ProtoMessage() {}

func (x *DayInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayInput.ProtoReflect.Descriptor instead.
func (*DayInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{21}
}

func (x *DayInput) GetProvider() *ProviderInput {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *DayInput) GetCalendarDate() int64 {
	if x != nil {
		return x.CalendarDate
	}
	return 0
}

func (x *DayInput) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *DayInput) GetLabels() []*LabelInput {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CustomerDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        *Day         `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Appointment *Appointment `protobuf:"bytes,2,opt,name=appointment,proto3" json:"appointment,omitempty"`
}

func (x *CustomerDay) Reset() {
	*x = CustomerDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerDay) ProtoMessage() {}

func (x *CustomerDay) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerDay.ProtoReflect.Descriptor instead.
func (*CustomerDay) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{22}
}

func (x *CustomerDay) GetDate() *Day {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *CustomerDay) GetAppointment() *Appointment {
	if x != nil {
		return x.Appointment
	}
	return nil
}

type ProviderDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date       *Day        `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Labels     []*Label    `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	DaySummary *DaySummary `protobuf:"bytes,3,opt,name=day_summary,json=daySummary,proto3" json:"day_summary,omitempty"`
}

func (x *ProviderDay) Reset() {
	*x = ProviderDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderDay) ProtoMessage() {}

func (x *ProviderDay) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderDay.ProtoReflect.Descriptor instead.
func (*ProviderDay) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{23}
}

func (x *ProviderDay) GetDate() *Day {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ProviderDay) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ProviderDay) GetDaySummary() *DaySummary {
	if x != nil {
		return x.DaySummary
	}
	return nil
}

type ProviderDayInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date       *DayInput        `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Labels     []*LabelInput    `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	DaySummary *DaySummaryInput `protobuf:"bytes,3,opt,name=day_summary,json=daySummary,proto3" json:"day_summary,omitempty"`
}

func (x *ProviderDayInput) Reset() {
	*x = ProviderDayInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderDayInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderDayInput) ProtoMessage() {}

func (x *ProviderDayInput) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderDayInput.ProtoReflect.Descriptor instead.
func (*ProviderDayInput) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{24}
}

func (x *ProviderDayInput) GetDate() *DayInput {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ProviderDayInput) GetLabels() []*LabelInput {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ProviderDayInput) GetDaySummary() *DaySummaryInput {
	if x != nil {
		return x.DaySummary
	}
	return nil
}

type DayDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider     *Provider      `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Day          string         `protobuf:"bytes,2,opt,name=day,proto3" json:"day,omitempty"`
	Appointments []*Appointment `protobuf:"bytes,3,rep,name=appointments,proto3" json:"appointments,omitempty"`
}

func (x *DayDetails) Reset() {
	*x = DayDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayDetails) ProtoMessage() {}

func (x *DayDetails) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayDetails.ProtoReflect.Descriptor instead.
func (*DayDetails) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{25}
}

func (x *DayDetails) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *DayDetails) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *DayDetails) GetAppointments() []*Appointment {
	if x != nil {
		return x.Appointments
	}
	return nil
}

// A ListDaysRequest
type ListDaysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique calendar id
	Id       int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Provider *ProviderInput `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	// the first day to return
	StartDate int64 `protobuf:"varint,3,opt,name=startDate,proto3" json:"startDate,omitempty"`
	// the number of days to return
	Length int64 `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *ListDaysRequest) Reset() {
	*x = ListDaysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDaysRequest) ProtoMessage() {}

func (x *ListDaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDaysRequest.ProtoReflect.Descriptor instead.
func (*ListDaysRequest) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{26}
}

func (x *ListDaysRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListDaysRequest) GetProvider() *ProviderInput {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *ListDaysRequest) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *ListDaysRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type ListProviderDaysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []*ProviderDay `protobuf:"bytes,1,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *ListProviderDaysResponse) Reset() {
	*x = ListProviderDaysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProviderDaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProviderDaysResponse) ProtoMessage() {}

func (x *ListProviderDaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProviderDaysResponse.ProtoReflect.Descriptor instead.
func (*ListProviderDaysResponse) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{27}
}

func (x *ListProviderDaysResponse) GetDays() []*ProviderDay {
	if x != nil {
		return x.Days
	}
	return nil
}

type ListCustomerDaysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []*CustomerDay `protobuf:"bytes,1,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *ListCustomerDaysResponse) Reset() {
	*x = ListCustomerDaysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomerDaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerDaysResponse) ProtoMessage() {}

func (x *ListCustomerDaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerDaysResponse.ProtoReflect.Descriptor instead.
func (*ListCustomerDaysResponse) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{28}
}

func (x *ListCustomerDaysResponse) GetDays() []*CustomerDay {
	if x != nil {
		return x.Days
	}
	return nil
}

type UpdateCalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *ProviderInput      `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Days     []*ProviderDayInput `protobuf:"bytes,2,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *UpdateCalendarRequest) Reset() {
	*x = UpdateCalendarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalendarRequest) ProtoMessage() {}

func (x *UpdateCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalendarRequest.ProtoReflect.Descriptor instead.
func (*UpdateCalendarRequest) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateCalendarRequest) GetProvider() *ProviderInput {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *UpdateCalendarRequest) GetDays() []*ProviderDayInput {
	if x != nil {
		return x.Days
	}
	return nil
}

type UpdateCalendarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []*ProviderDay `protobuf:"bytes,1,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *UpdateCalendarResponse) Reset() {
	*x = UpdateCalendarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalendarResponse) ProtoMessage() {}

func (x *UpdateCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalendarResponse.ProtoReflect.Descriptor instead.
func (*UpdateCalendarResponse) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateCalendarResponse) GetDays() []*ProviderDay {
	if x != nil {
		return x.Days
	}
	return nil
}

type AddAppointmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    *ProviderInput    `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Appointment *AppointmentInput `protobuf:"bytes,2,opt,name=appointment,proto3" json:"appointment,omitempty"`
}

func (x *AddAppointmentRequest) Reset() {
	*x = AddAppointmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppointmentRequest) ProtoMessage() {}

func (x *AddAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppointmentRequest.ProtoReflect.Descriptor instead.
func (*AddAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{31}
}

func (x *AddAppointmentRequest) GetProvider() *ProviderInput {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *AddAppointmentRequest) GetAppointment() *AppointmentInput {
	if x != nil {
		return x.Appointment
	}
	return nil
}

type CancelAppointmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentId int64 `protobuf:"varint,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
}

func (x *CancelAppointmentRequest) Reset() {
	*x = CancelAppointmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_schedule_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAppointmentRequest) ProtoMessage() {}

func (x *CancelAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_schedule_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAppointmentRequest.ProtoReflect.Descriptor instead.
func (*CancelAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_schedule_schedule_proto_rawDescGZIP(), []int{32}
}

func (x *CancelAppointmentRequest) GetAppointmentId() int64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

var File_schedule_schedule_proto protoreflect.FileDescriptor

var file_schedule_schedule_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x57, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x0a, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x96, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x09, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x33, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x68, 0x61, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xd2,
	0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x68, 0x61, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x22, 0xab, 0x02, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x52, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x22, 0xc4, 0x02, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x6b, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x70, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x55, 0x0a, 0x15, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x14, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22,
	0xb4, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x5a, 0x0a, 0x15, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x14, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x12, 0x2e,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22,
	0xb5, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x69, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x44, 0x61, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x35,
	0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44,
	0x61, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x44, 0x61, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x0a, 0x64, 0x61, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x89, 0x01, 0x0a,
	0x0a, 0x44, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x39, 0x0a,
	0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x45, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x79, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x45,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x61,
	0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x7c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x79, 0x73, 0x22, 0x43, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x79, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xdc, 0x03, 0x0a, 0x09, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x79, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x79,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x79, 0x73, 0x12, 0x19, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x1f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x11, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x61, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schedule_schedule_proto_rawDescOnce sync.Once
	file_schedule_schedule_proto_rawDescData = file_schedule_schedule_proto_rawDesc
)

func file_schedule_schedule_proto_rawDescGZIP() []byte {
	file_schedule_schedule_proto_rawDescOnce.Do(func() {
		file_schedule_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(file_schedule_schedule_proto_rawDescData)
	})
	return file_schedule_schedule_proto_rawDescData
}

var file_schedule_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_schedule_schedule_proto_goTypes = []interface{}{
	(*Label)(nil),                       // 0: schedule.Label
	(*LabelInput)(nil),                  // 1: schedule.LabelInput
	(*RecipientType)(nil),               // 2: schedule.RecipientType
	(*RecipientAttributes)(nil),         // 3: schedule.RecipientAttributes
	(*RecipientAttributesInput)(nil),    // 4: schedule.RecipientAttributesInput
	(*Recipient)(nil),                   // 5: schedule.Recipient
	(*RecipientInput)(nil),              // 6: schedule.RecipientInput
	(*ServiceType)(nil),                 // 7: schedule.ServiceType
	(*ServiceTypeInput)(nil),            // 8: schedule.ServiceTypeInput
	(*Customer)(nil),                    // 9: schedule.Customer
	(*CustomerInput)(nil),               // 10: schedule.CustomerInput
	(*CustomerPrice)(nil),               // 11: schedule.CustomerPrice
	(*Provider)(nil),                    // 12: schedule.Provider
	(*ProviderInput)(nil),               // 13: schedule.ProviderInput
	(*Appointment)(nil),                 // 14: schedule.Appointment
	(*AppointmentInput)(nil),            // 15: schedule.AppointmentInput
	(*AppointmentTypeSummary)(nil),      // 16: schedule.AppointmentTypeSummary
	(*AppointmentTypeSummaryInput)(nil), // 17: schedule.AppointmentTypeSummaryInput
	(*DaySummary)(nil),                  // 18: schedule.DaySummary
	(*DaySummaryInput)(nil),             // 19: schedule.DaySummaryInput
	(*Day)(nil),                         // 20: schedule.Day
	(*DayInput)(nil),                    // 21: schedule.DayInput
	(*CustomerDay)(nil),                 // 22: schedule.CustomerDay
	(*ProviderDay)(nil),                 // 23: schedule.ProviderDay
	(*ProviderDayInput)(nil),            // 24: schedule.ProviderDayInput
	(*DayDetails)(nil),                  // 25: schedule.DayDetails
	(*ListDaysRequest)(nil),             // 26: schedule.ListDaysRequest
	(*ListProviderDaysResponse)(nil),    // 27: schedule.ListProviderDaysResponse
	(*ListCustomerDaysResponse)(nil),    // 28: schedule.ListCustomerDaysResponse
	(*UpdateCalendarRequest)(nil),       // 29: schedule.UpdateCalendarRequest
	(*UpdateCalendarResponse)(nil),      // 30: schedule.UpdateCalendarResponse
	(*AddAppointmentRequest)(nil),       // 31: schedule.AddAppointmentRequest
	(*CancelAppointmentRequest)(nil),    // 32: schedule.CancelAppointmentRequest
	(*empty.Empty)(nil),                 // 33: google.protobuf.Empty
}
var file_schedule_schedule_proto_depIdxs = []int32{
	3,  // 0: schedule.Recipient.attributes:type_name -> schedule.RecipientAttributes
	4,  // 1: schedule.RecipientInput.attributes:type_name -> schedule.RecipientAttributesInput
	5,  // 2: schedule.Customer.recipients:type_name -> schedule.Recipient
	6,  // 3: schedule.CustomerInput.recipients:type_name -> schedule.RecipientInput
	9,  // 4: schedule.CustomerPrice.customer:type_name -> schedule.Customer
	7,  // 5: schedule.CustomerPrice.service_type:type_name -> schedule.ServiceType
	7,  // 6: schedule.Provider.service_types:type_name -> schedule.ServiceType
	8,  // 7: schedule.ProviderInput.service_types:type_name -> schedule.ServiceTypeInput
	12, // 8: schedule.Appointment.provider:type_name -> schedule.Provider
	9,  // 9: schedule.Appointment.customer:type_name -> schedule.Customer
	7,  // 10: schedule.Appointment.service_type:type_name -> schedule.ServiceType
	20, // 11: schedule.Appointment.days:type_name -> schedule.Day
	13, // 12: schedule.AppointmentInput.provider:type_name -> schedule.ProviderInput
	10, // 13: schedule.AppointmentInput.customer:type_name -> schedule.CustomerInput
	8,  // 14: schedule.AppointmentInput.service_type:type_name -> schedule.ServiceTypeInput
	21, // 15: schedule.AppointmentInput.days:type_name -> schedule.DayInput
	12, // 16: schedule.DaySummary.provider:type_name -> schedule.Provider
	16, // 17: schedule.DaySummary.appointment_summaries:type_name -> schedule.AppointmentTypeSummary
	13, // 18: schedule.DaySummaryInput.provider:type_name -> schedule.ProviderInput
	17, // 19: schedule.DaySummaryInput.appointment_summaries:type_name -> schedule.AppointmentTypeSummaryInput
	12, // 20: schedule.Day.provider:type_name -> schedule.Provider
	0,  // 21: schedule.Day.labels:type_name -> schedule.Label
	13, // 22: schedule.DayInput.provider:type_name -> schedule.ProviderInput
	1,  // 23: schedule.DayInput.labels:type_name -> schedule.LabelInput
	20, // 24: schedule.CustomerDay.date:type_name -> schedule.Day
	14, // 25: schedule.CustomerDay.appointment:type_name -> schedule.Appointment
	20, // 26: schedule.ProviderDay.date:type_name -> schedule.Day
	0,  // 27: schedule.ProviderDay.labels:type_name -> schedule.Label
	18, // 28: schedule.ProviderDay.day_summary:type_name -> schedule.DaySummary
	21, // 29: schedule.ProviderDayInput.date:type_name -> schedule.DayInput
	1,  // 30: schedule.ProviderDayInput.labels:type_name -> schedule.LabelInput
	19, // 31: schedule.ProviderDayInput.day_summary:type_name -> schedule.DaySummaryInput
	12, // 32: schedule.DayDetails.provider:type_name -> schedule.Provider
	14, // 33: schedule.DayDetails.appointments:type_name -> schedule.Appointment
	13, // 34: schedule.ListDaysRequest.provider:type_name -> schedule.ProviderInput
	23, // 35: schedule.ListProviderDaysResponse.days:type_name -> schedule.ProviderDay
	22, // 36: schedule.ListCustomerDaysResponse.days:type_name -> schedule.CustomerDay
	13, // 37: schedule.UpdateCalendarRequest.provider:type_name -> schedule.ProviderInput
	24, // 38: schedule.UpdateCalendarRequest.days:type_name -> schedule.ProviderDayInput
	23, // 39: schedule.UpdateCalendarResponse.days:type_name -> schedule.ProviderDay
	13, // 40: schedule.AddAppointmentRequest.provider:type_name -> schedule.ProviderInput
	15, // 41: schedule.AddAppointmentRequest.appointment:type_name -> schedule.AppointmentInput
	26, // 42: schedule.Scheduler.ListProviderDays:input_type -> schedule.ListDaysRequest
	26, // 43: schedule.Scheduler.ListCustomerDays:input_type -> schedule.ListDaysRequest
	29, // 44: schedule.Scheduler.UpdateCalendar:input_type -> schedule.UpdateCalendarRequest
	31, // 45: schedule.Scheduler.AddAppointment:input_type -> schedule.AddAppointmentRequest
	32, // 46: schedule.Scheduler.CancelAppointment:input_type -> schedule.CancelAppointmentRequest
	21, // 47: schedule.Scheduler.GetDayDetails:input_type -> schedule.DayInput
	27, // 48: schedule.Scheduler.ListProviderDays:output_type -> schedule.ListProviderDaysResponse
	28, // 49: schedule.Scheduler.ListCustomerDays:output_type -> schedule.ListCustomerDaysResponse
	30, // 50: schedule.Scheduler.UpdateCalendar:output_type -> schedule.UpdateCalendarResponse
	14, // 51: schedule.Scheduler.AddAppointment:output_type -> schedule.Appointment
	33, // 52: schedule.Scheduler.CancelAppointment:output_type -> google.protobuf.Empty
	25, // 53: schedule.Scheduler.GetDayDetails:output_type -> schedule.DayDetails
	48, // [48:54] is the sub-list for method output_type
	42, // [42:48] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_schedule_schedule_proto_init() }
func file_schedule_schedule_proto_init() {
	if File_schedule_schedule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schedule_schedule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipientType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipientAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipientAttributesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipientInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTypeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Appointment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentTypeSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentTypeSummaryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaySummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaySummaryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Day); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderDayInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDaysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProviderDaysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomerDaysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCalendarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCalendarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppointmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_schedule_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAppointmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schedule_schedule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schedule_schedule_proto_goTypes,
		DependencyIndexes: file_schedule_schedule_proto_depIdxs,
		MessageInfos:      file_schedule_schedule_proto_msgTypes,
	}.Build()
	File_schedule_schedule_proto = out.File
	file_schedule_schedule_proto_rawDesc = nil
	file_schedule_schedule_proto_goTypes = nil
	file_schedule_schedule_proto_depIdxs = nil
}
